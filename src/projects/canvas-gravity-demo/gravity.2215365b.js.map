{"version":3,"sources":["Ball.js","gravity.js"],"names":["Ball","canvas","ctx","radius","x","y","vx","vy","color","g","b","width","height","f","c","Math","abs","draw","beginPath","fillStyle","arc","PI","closePath","fill","currentLoopTimestamp","fps","document","getElementById","getContext","lastLoopTimestamp","Date","count","gravity","bounce","balls","calcFPS","lastTimestamp","currentTimestamp","round","drawText","font","fillText","toFixed","init","i","tmpVx","floor","random","tmpVy","tmpX","tmpY","toString","now","clearRect","fillRect","forEach","setGravity","setBounce","update","requestAnimationFrame","window","addEventListener","innerHeight","innerWidth","e","code","length"],"mappings":"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","file":"gravity.2215365b.js","sourceRoot":"..","sourcesContent":["// Ball\n\nclass Ball {\n  constructor(canvas, ctx, radius, x, y, vx, vy, color, g, b) {\n    this.canvas = canvas; // canvas\n    this.ctx = ctx; // canvas context\n    this.radius = radius || 10;\t// radius\n    this.x = x || canvas.width / 2; // initial x position\n    this.y = y || canvas.height / 4;\t// initial y position\n    this.vx = vx || 0; // initial x velocity\n    this.vy = vy || 0; // initial y velocity\n    this.f = 0.97; // friction effect\n    this.c = color || '#000000'; // color\n    this.g = g; // gravity\n    this.b = b; // bounce\n  }\n\n  setGravity(g) {\n    this.g = g;\n  }\n\n  setBounce(b) {\n    this.b = b;\n  }\n\n  // physics\n  update() {\n    this.x += this.vx; // apply x velocity to x position\n    this.vy += this.g; // apply gravity to y velocity\n    this.y += this.vy; // apply y velocity to y position\n\n    // if ball is below window, reposition to bottom, introduce bounce and apply friction\n    if(this.y+this.radius > this.canvas.height) {\n      this.y = this.canvas.height - this.radius;\n      this.vy *= -this.b;\n      if(Math.abs(this.vx)>0) {\n        this.vx *= this.f;\n      }\n    }\n\n    // if ball hits right of the window, bounce off and apply friction\n    if(this.x + this.radius > this.canvas.width) {\n      this.x = this.canvas.width - this.radius;\n      this.vx = this.vx * -1;\n      this.vx *= this.f;\n    }\n\n    // if ball hits left of the window, bounce off and apply friction\n    if (this.x-this.radius < 0) {\n      this.vx = this.vx * -1;\n      this.vx *= this.f;\n    }\n\n    this.draw();\n  }\n\n  // draw the ball\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.fillStyle = this.c;\n    this.ctx.arc(this.x,this.y,this.radius,0,Math.PI*2,true);\n    this.ctx.closePath();\n    this.ctx.fill();\n  }\n}\n\nexport default Ball;\n","// Gravity\n// Â© 2016 - 2020 Michael Hamilton\n\nimport Ball from './Ball';\n\nconst canvas = document.getElementById('canvas'); // canvas element\nconst ctx = canvas.getContext('2d'); // canvas context\nlet lastLoopTimestamp = new Date(); // time of last loop\nlet currentLoopTimestamp;\nlet fps; // fps\nlet count = 100; // number of balls to initialize for use in our demo\nlet gravity = 0.5; // global gravity effect\nlet bounce = 0.7; // bounce effect\nconst balls = []; // here, hold these\n\n// Calculates FPS\nconst calcFPS = (lastTimestamp, currentTimestamp) => {\n  fps = 1000 / (currentTimestamp - lastTimestamp);\n  return Math.round(fps);\n}\n\n// Draw title, fps, etc\nconst drawText = (ctx) => {\n  ctx.fillStyle = 'white';\n  ctx.font = '24px sans-serif';\n  ctx.fillText('gravity demo', 10, 20);\n\n  ctx.font = \"14px sans-serif\";\n  ctx.fillText('press space to reset', 10, 45);\n  ctx.fillText('up/down to change gravity', 10, 65);\n  ctx.fillText('left/right to change bounce', 10, 85);\n  ctx.fillText('number keys to change number of balls', 10, 105);\n\n  ctx.fillText(`fps: ${calcFPS(lastLoopTimestamp, currentLoopTimestamp)}`, canvas.width - 60, 20);\n  ctx.fillText(`balls: ${count}`, canvas.width - 75, 40);\n  ctx.fillText(`gravity: ${gravity.toFixed(2)}`, canvas.width - 90, 60);\n  ctx.fillText(`bounce: ${bounce.toFixed(2)}`, canvas.width - 90, 80);\n}\n\nconst init = (balls, count) => {\n  for (let i = 0; i < count; i++) {\n    const tmpVx = Math.floor(Math.random() * ([-1, 1][Math.random() * 2 | 0] * 10));\n    const tmpVy = Math.floor(Math.random() * 15) + 5;\n    const radius = Math.floor(Math.random() * 15) + 5;\n    const tmpX = Math.floor(Math.random() * canvas.width - radius) + radius;\n    const tmpY = Math.floor(Math.random() * canvas.height - radius) + radius;\n    const color = '#' + Math.floor(Math.random() * 16777215).toString(16);\n\n    balls[i] = new Ball(canvas, ctx, radius, tmpX, tmpY, tmpVx, tmpVy, color, gravity, bounce);\n  }\n};\n\n// Main Loop\nconst draw = (ctx, balls) =>{\n  currentLoopTimestamp = Date.now();\n\n  ctx.clearRect(0,0,canvas.width,canvas.height);\t//Clear last frame\n\n  ctx.fillStyle = '#111';\n  ctx.fillRect(0,0,canvas.width,canvas.height);\t// Background\n\n  drawText(ctx);\n\n  balls.forEach(b => {\n    b.setGravity(gravity)\n    b.setBounce(bounce)\n    b.update()\n  });\n\n  lastLoopTimestamp = currentLoopTimestamp;\n\n  requestAnimationFrame(() => draw(ctx, balls));\n};\n\nwindow.addEventListener('resize', () => {\n  canvas.height = window.innerHeight;\n  canvas.width = window.innerWidth;\n});\n\nwindow.addEventListener('keydown', (e) => {\n  switch(e.code) {\n    case 'Space':\n      balls.length = 0;\n      init(balls, count);\n      break;\n\n    case 'ArrowUp':\n      gravity += 0.1;\n      break;\n\n    case 'ArrowDown':\n      gravity -= 0.1;\n      break;\n\n    case 'ArrowRight':\n      bounce += 0.1;\n      break;\n\n    case 'ArrowLeft':\n      bounce -= 0.1;\n      break;\n\n    case 'Digit1':\n      count = 100;\n      balls.length = 0;\n      init(balls, count);\n      break;\n\n    case 'Digit2':\n      count = 200;\n      balls.length = 0;\n      init(balls, count);\n      break;\n\n    case 'Digit3':\n      count = 300;\n      balls.length = 0;\n      init(balls, count);\n      break;\n\n    case 'Digit4':\n      count = 400;\n      balls.length = 0;\n      init(balls, count);\n      break;\n\n    case 'Digit5':\n      count = 500;\n      balls.length = 0;\n      init(balls, count);\n      break;\n\n    case 'Digit6':\n      count = 600;\n      balls.length = 0;\n      init(balls, count);\n      break;\n\n    case 'Digit7':\n      count = 700;\n      balls.length = 0;\n      init(balls, count);\n      break;\n\n    case 'Digit8':\n      count = 800;\n      balls.length = 0;\n      init(balls, count);\n      break;\n\n    case 'Digit9':\n      count = 900;\n      balls.length = 0;\n      init(balls, count);\n      break;\n  }\n});\n\n// Set the canvas dimensions to that of the window\ncanvas.height = window.innerHeight;\ncanvas.width = window.innerWidth;\n\ninit(balls, count);\ndraw(ctx, balls);\n"]}